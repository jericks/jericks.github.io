<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GEOC on GeoScripting</title><link>https://jericks.github.io/tags/geoc/</link><description>Recent content in GEOC on GeoScripting</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 10 Nov 2022 09:05:25 -0800</lastBuildDate><atom:link href="https://jericks.github.io/tags/geoc/index.xml" rel="self" type="application/rss+xml"/><item><title>Geoc Map Cubes</title><link>https://jericks.github.io/posts/geoc-mapcube/</link><pubDate>Thu, 10 Nov 2022 09:05:25 -0800</pubDate><guid>https://jericks.github.io/posts/geoc-mapcube/</guid><description>&lt;p>I recently &lt;a href="https://jericks.github.io/posts/geoscript-mapcube/">posted&lt;/a> about creating paper craft map cubes using GeoScript Groovy. This time, let&amp;rsquo;s use the &lt;a href="https://github.com/jericks/geoc">geoc&lt;/a> command line interface.&lt;/p></description></item><item><title>Using geoc to create WA State Geology GeoPackage</title><link>https://jericks.github.io/posts/geoc-wageology/</link><pubDate>Mon, 21 Mar 2022 11:23:23 -0800</pubDate><guid>https://jericks.github.io/posts/geoc-wageology/</guid><description>&lt;p>I love geology maps. After working on the Mars Geology map project, I wanted to see if I could do something similar closer to home. I wanted to use &lt;a href="https://github.com/jericks/geoc">geoc&lt;/a> as much as possible to create a GeoPackage database of WA State geology data with embedded styles that would work in QGIS and geoc.&lt;/p></description></item><item><title>GeoYaml support in geoc</title><link>https://jericks.github.io/posts/geoc-yaml/</link><pubDate>Mon, 17 Jan 2022 09:05:25 -0800</pubDate><guid>https://jericks.github.io/posts/geoc-yaml/</guid><description>&lt;p>&lt;a href="https://github.com/louh/geoyaml">GeoYaml&lt;/a> is a new geospatial format inspired heavily by GeoJSON. The &lt;a href="https://github.com/jericks/geoc">geoc&lt;/a>
command line application inherited support from the &lt;a href="https://github.com/geoscript/geoscript-groovy">GeoScript Groovy&lt;/a> library.&lt;/p>
&lt;p>The &lt;strong>geoc geometry convert&lt;/strong> command can read and write geometries in numerous formats. With the addition of GeoYaml to GeoScript, you
can now convert WKT to GeoYaml.&lt;/p></description></item><item><title>GEOC: A command line interface for GeoTools</title><link>https://jericks.github.io/posts/geoc-cli/</link><pubDate>Sun, 11 Apr 2021 14:46:23 -0700</pubDate><guid>https://jericks.github.io/posts/geoc-cli/</guid><description>The GDAL and OGR libraries are written in C and C++ and have an awesome command line interface (CLI). It is used extensively by GIS analysts and developers.
On the Java side of the fence, GeoTools is an equivalent geospatial library. It contains code for reading and writing vector and raster datasets but it does not have a CLI.
The GEOC project is my attempt to give GeoTools a CLI. It is written in Groovy using GeoScript which wraps GeoTools in a scripting API.</description></item></channel></rss>