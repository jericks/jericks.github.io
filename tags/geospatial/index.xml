<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>geospatial on GeoScripting</title><link>https://jericks.github.io/tags/geospatial/</link><description>Recent content in geospatial on GeoScripting</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Mar 2022 11:23:23 -0800</lastBuildDate><atom:link href="https://jericks.github.io/tags/geospatial/index.xml" rel="self" type="application/rss+xml"/><item><title>Using geoc to create WA State Geology GeoPackage</title><link>https://jericks.github.io/posts/geoc-wageology/</link><pubDate>Mon, 21 Mar 2022 11:23:23 -0800</pubDate><guid>https://jericks.github.io/posts/geoc-wageology/</guid><description>&lt;p>I love geology maps. After working on the Mars Geology map project, I wanted to see if I could do something similar closer to home. I wanted to use &lt;a href="https://github.com/jericks/geoc">geoc&lt;/a> as much as possible to create a GeoPackage database of WA State geology data with embedded styles that would work in QGIS and geoc.&lt;/p></description></item><item><title>Writing Geospatial scripts with Java and jbang</title><link>https://jericks.github.io/posts/jbang-jts/</link><pubDate>Tue, 23 Nov 2021 11:23:23 -0800</pubDate><guid>https://jericks.github.io/posts/jbang-jts/</guid><description>&lt;p>Usually writing a Java application requires using Maven or Gradle. While
both are great tools for large projects, they are too complicated for
small scripts. jbang is a new tool that lets you create scripts or simple
applications with Java. I will create a geospatial command line tool using jbang and the Java Topology Suite (JTS).&lt;/p></description></item></channel></rss>